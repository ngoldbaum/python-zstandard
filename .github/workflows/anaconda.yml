on:
  push:
  pull_request:
  schedule:
    - cron: '30 13 * * *'
jobs:
  linux:
    strategy:
      fail-fast: false
      matrix:
        py:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
    runs-on: 'ubuntu-22.04'
    env:
      # Enable fuzzing tests, other expensive tests.
      ZSTD_SLOW_TESTS: '1'
      # Make all compile warnings fatal.
      ZSTD_WARNINGS_AS_ERRORS: '1'
      # More thorough fuzzing coverage.
      HYPOTHESIS_PROFILE: 'ci'
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}

      - uses: actions/checkout@v4

      - name: Create Anaconda Environment
        run: |
          $CONDA/bin/conda create --yes --quiet --name env -c conda-forge --override-channels python=${{ matrix.py }} conda-build pip

      - name: Install Dependencies
        run: |
          source $CONDA/bin/activate env
          pip install --require-hashes -r ci/requirements.txt -c ci/constraints.txt

      - name: Build and Test
        run: |
          source $CONDA/bin/activate env
          $CONDA/bin/conda build --output-folder dist ci/conda

      - name: Upload Package
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.py }}
          path: dist

  windows:
    strategy:
      fail-fast: false
      matrix:
        py:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
    runs-on: 'windows-2022'
    env:
      # Enable fuzzing tests, other expensive tests.
      ZSTD_SLOW_TESTS: '1'
      # Make all compile warnings fatal.
      ZSTD_WARNINGS_AS_ERRORS: '1'
      # More thorough fuzzing coverage.
      HYPOTHESIS_PROFILE: 'ci'
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}

      - uses: actions/checkout@v4

      - name: Create Anaconda Environment
        run: |
          C:\Miniconda\condabin\conda.bat create --yes --quiet --name env -c conda-forge --override-channels python=${{ matrix.py }} conda-build pip

      - name: Install Dependencies
        run: |
          C:\Miniconda\envs\env\python.exe -m pip install --user --require-hashes -r ci/requirements.txt

      - name: Build and Test
        run: |
          C:\Miniconda\envs\env\Scripts\conda-build.exe --output-folder dist ci/conda

      - name: Upload Package
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.py }}
          path: dist

      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
